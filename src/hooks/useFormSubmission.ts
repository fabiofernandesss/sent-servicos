
import { useState } from 'react';
import { useToast } from '@/hooks/use-toast';
import { createDemanda, type DemandaData } from '@/services/supabaseService';
import { sendWhatsAppMessage } from '@/services/whatsappService';
import { sendRecursiveWhatsappMessage } from '@/services/recursiveWhatsappService';

export const useFormSubmission = () => {
  const [submitting, setSubmitting] = useState(false);
  const { toast } = useToast();

  const onSubmit = async (data: DemandaData, resetForm: () => void) => {
    setSubmitting(true);
    console.log('Iniciando envio de demanda:', data);
    
    try {
      // Criar demanda no Supabase
      await createDemanda(data);
      
      console.log('Demanda criada com sucesso, enviando WhatsApp...');
      
      // Mostrar toast de sucesso imediatamente ap√≥s salvar no banco
      toast({
        title: "Parab√©ns! üéâ",
        description: "Sua demanda foi enviada com sucesso! Em breve um profissional entrar√° em contato.",
        duration: 5000,
      });

      // Resetar o formul√°rio ap√≥s sucesso
      resetForm();

      // Enviar mensagem individual para o cliente (n√£o bloquear o fluxo)
      sendWhatsAppMessage(data.whatsapp, data.nome, data).then((whatsappResult) => {
        if (whatsappResult.success) {
          console.log('WhatsApp individual enviado com sucesso');
        } else {
          console.warn('Erro no WhatsApp individual, mas demanda foi criada:', whatsappResult.error);
        }
      }).catch((error) => {
        console.warn('Erro no WhatsApp individual (n√£o cr√≠tico):', error);
      });

      // Enviar mensagem recursiva para profissionais da categoria e cidade
      const mensagemProfissionais = `üîî *NOVA DEMANDA DISPON√çVEL!*

üìã *Detalhes da Solicita√ß√£o:*
‚Ä¢ *Cliente:* ${data.nome}
‚Ä¢ *Local:* ${data.cidade}/${data.estado}
‚Ä¢ *Urg√™ncia:* ${data.urgencia}

${data.observacao ? `üìù *Observa√ß√µes:* ${data.observacao}\n\n` : ''}üíº *Uma nova oportunidade de trabalho est√° dispon√≠vel na sua regi√£o!*

Entre em contato com o cliente para oferecer seus servi√ßos e fechar este neg√≥cio.

üìû *Aja r√°pido! O primeiro profissional a responder tem mais chances de ser escolhido!*`;

      sendRecursiveWhatsappMessage(
        data.categoria_id,
        data.cidade,
        mensagemProfissionais,
        '10-15'
      ).then((recursiveResult) => {
        if (recursiveResult.success) {
          console.log(`Mensagem recursiva enviada para ${recursiveResult.recipientsCount} profissionais`);
          toast({
            title: "Profissionais notificados! üì¢",
            description: `${recursiveResult.recipientsCount} profissionais da sua regi√£o foram notificados sobre sua demanda.`,
            duration: 4000,
          });
        } else {
          console.warn('Erro no envio recursivo:', recursiveResult.error);
        }
      }).catch((error) => {
        console.warn('Erro no envio recursivo (n√£o cr√≠tico):', error);
      });

      // Resetar para p√°gina inicial ap√≥s sucesso
      setTimeout(() => {
        window.location.href = '/';
      }, 3000); // Aguardar 3 segundos para o usu√°rio ver os toasts
      
    } catch (error) {
      console.error('Erro ao cadastrar demanda:', error);
      toast({
        title: "Erro",
        description: "Erro ao cadastrar demanda. Tente novamente.",
        variant: "destructive",
      });
    } finally {
      setSubmitting(false);
    }
  };

  return {
    submitting,
    onSubmit
  };
};
